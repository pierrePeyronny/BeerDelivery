{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/deliveryModule/class/beer.ts","webpack:///./src/app/deliveryModule/class/container.ts","webpack:///./src/app/deliveryModule/class/index.ts","webpack:///./src/app/deliveryModule/components/beer/beer.component.css","webpack:///./src/app/deliveryModule/components/beer/beer.component.html","webpack:///./src/app/deliveryModule/components/beer/beer.component.ts","webpack:///./src/app/deliveryModule/components/container/container.component.css","webpack:///./src/app/deliveryModule/components/container/container.component.html","webpack:///./src/app/deliveryModule/components/container/container.component.ts","webpack:///./src/app/deliveryModule/components/index.ts","webpack:///./src/app/deliveryModule/components/timer/timer.component.html","webpack:///./src/app/deliveryModule/components/timer/timer.component.ts","webpack:///./src/app/deliveryModule/components/truck/truck.component.css","webpack:///./src/app/deliveryModule/components/truck/truck.component.html","webpack:///./src/app/deliveryModule/components/truck/truck.component.ts","webpack:///./src/app/deliveryModule/delivery-routing.module.ts","webpack:///./src/app/deliveryModule/delivery.module.ts","webpack:///./src/app/deliveryModule/services/delivery-api.service.ts","webpack:///./src/app/deliveryModule/services/delivery-resolver.service.ts","webpack:///./src/app/deliveryModule/services/in-memory-data.service.ts","webpack:///./src/app/deliveryModule/services/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"src/app/deliveryModule/delivery.module\": [\n\t\t\"./src/app/deliveryModule/delivery.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/delivery', pathMatch: 'full' },\n  { path: 'delivery', loadChildren: 'src/app/deliveryModule/delivery.module#DeliveryModule'}\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n<router-outlet></router-outlet>\\n\\n<!-- <div>\\n  <delivery-truck></delivery-truck>\\n</div> -->\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PragmaBreweryApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n//Modules\nimport { DeliveryModule } from './deliveryModule/delivery.module';\nimport { AppRoutingModule } from './/app-routing.module';\n\n//Components\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    DeliveryModule,\n    AppRoutingModule\n      ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Beer {\n    id: number;\n    name: string;\n    lowTemperature: number;\n    highTemperature: number;\n\n\n    constructor(id: number, name: string, lowTemperature: number, highTemperature: number)\n    {\n      this.id = id;\n      this.name = name;\n      this.lowTemperature = lowTemperature;\n      this.highTemperature = highTemperature;\n    }\n\n    temperatureIsLimitOutOfRange(currentTemperature: number): boolean{\n      return (currentTemperature == this.lowTemperature || currentTemperature == this.highTemperature);\n    }\n\n    temperatureIsOutOfRange(currentTemperature: number): boolean{\n      return (currentTemperature < this.lowTemperature || currentTemperature > this.highTemperature);\n    }\n  }","import { Beer } from './beer';\n\nexport class Container {\n    id: number;\n    currentTemperature: number;\n    beer: Beer;\n\n\n    constructor(id: number, currentTemperature: number, beer: Beer){\n      this.id = id;\n      this.currentTemperature = currentTemperature;\n      this.beer = new Beer(beer.id, beer.name, beer.lowTemperature, beer.highTemperature);\n    }\n\n    getCurrentTemperature(): number{\n      return this.currentTemperature;\n    }\n\n    setCurrentTemperature(newTemperature: number) {\n      this.currentTemperature = newTemperature;\n    }\n\n    checkLimitTemperature(): boolean {\n      return this.beer.temperatureIsLimitOutOfRange(this.currentTemperature);\n    }\n\n    checkOutOfRangeTemperature(): boolean {\n      return this.beer.temperatureIsOutOfRange(this.currentTemperature);\n    }\n\n  }","export * from './beer';\nexport * from './container';","module.exports = \".transportInformations ul{\\n    list-style:none;\\n}\"","module.exports = \"<div *ngIf=\\\"beer\\\" class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n      <h5>Beer {{beer.id}} <small>{{beer.name}}</small></h5>\\n\\n      <div class=\\\"transportInformations\\\">\\n          <u>Transport informations:</u>\\n          <ul>\\n            <li>Low temperature: {{beer.lowTemperature}}°C</li>\\n            <li>high temperature: {{beer.highTemperature}}°C</li>\\n          </ul>\\n        </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n//class\nimport { Beer } from '../../class';\n\n@Component({\n  selector: 'delivery-beer',\n  templateUrl: './beer.component.html',\n  styleUrls: ['./beer.component.css']\n})\nexport class BeerComponent implements OnInit {\n@Input() beer: Beer;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".containerBloc{\\n    margin: 10px;\\n    padding: 10px;\\n}\\n\\n.currentTemperature{\\n    font-size: 35px;\\n}\"","module.exports = \"\\n  <div *ngIf=\\\"_container\\\" class=\\\"col-xs-6 col-md-3 containerBloc\\\" \\n  [ngClass]=\\\"{'bg-success': true, 'bg-warning': this._container.checkLimitTemperature(), 'bg-danger': this._container.checkOutOfRangeTemperature()}\\\">\\n  <h4><u>Container number:</u> {{_container.id}}</h4> \\n\\n  <!-- Beer component -->\\n  <delivery-beer [beer]=\\\"_container.beer\\\"></delivery-beer>\\n\\n  <!-- Current temperature -->\\n  <div class=\\\"text-center\\\">\\n    <u>Current container temperature:</u>\\n    <p class=\\\"currentTemperature\\\" [ngClass]=\\\"{'text-danger': this._container.checkOutOfRangeTemperature()}\\\">{{_container.currentTemperature}}°C</p>\\n  </div>\\n\\n</div>\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Subscription } from \"rxjs\";\n\n//Services\nimport { DeliveryApiService } from '../../services';\n\n//Class\nimport { Container } from '../../class';\n\n@Component({\n  selector: 'delivery-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.css']\n})\nexport class ContainerComponent implements OnInit {\n@Input() inputContainer: Container\n_container: Container;\n\nsubscriptionDataLoaded: Subscription;\n\n  constructor(private deliveryService: DeliveryApiService) { }\n\n  ngOnInit() {\n    this._container = new Container(this.inputContainer.id, this.inputContainer.currentTemperature, this.inputContainer.beer);\n\n    this.subscriptionDataLoaded = this.deliveryService.containersDatas$.subscribe(datas => {\n      this.updateTemperatureContainer(datas)\n    });\n  }\n\n  updateTemperatureContainer(updatedContainers: Container[]): void {\n    let newDatacontainer: Container = updatedContainers.find(x => x.id == this._container.id);\n\n    if(newDatacontainer) {\n      this._container.setCurrentTemperature(newDatacontainer.getCurrentTemperature())\n    }\n\n  }\n\n   \n   ngOnDestroy(){\n     if(this.subscriptionDataLoaded)\n     {\n       this.subscriptionDataLoaded.unsubscribe();\n     }\n   }\n\n}\n","export * from './truck/truck.component';\nexport * from './container/container.component';\nexport * from './beer/beer.component';\nexport * from './timer/timer.component';","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <p>\\n        <strong>Last temperature check:</strong> {{dateLastUpdate | date:'shortTime'}}\\n    </p>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from \"rxjs\";\n\n//Services\nimport { DeliveryApiService } from '../../services';\n\n\n@Component({\n  selector: 'delivery-timer',\n  templateUrl: './timer.component.html'\n})\nexport class TimerComponent implements OnInit, OnDestroy {\n\n  dateLastUpdate: Date = new Date();\n  subscriptionDataLoaded: Subscription;\n\n  constructor(private deliveryService: DeliveryApiService) { }\n\n  ngOnInit() {\n    //Init and launch the timer\n    this.deliveryService.initDataLoader();\n    \n    //Every time the datas are uptated, dateLastUpdate is set to the current Date\n    this.subscriptionDataLoaded = this.deliveryService.containersDatas$.subscribe(datas => {\n      this.dateLastUpdate = new Date();\n    });\n  }\n   \n   ngOnDestroy(){\n     if(this.subscriptionDataLoaded)\n     {\n       this.subscriptionDataLoaded.unsubscribe();\n     }\n     //If the TimerComponent doesn't exist anymore, we stop the timer\n     this.deliveryService.stopDataLoader();\n   }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n        <span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span>\\n        <span class=\\\"sr-only\\\">Error:</span>\\n        Enter a valid email address\\n</div>\\n\\n<delivery-timer></delivery-timer>\\n\\n<div class=\\\"row\\\">\\n    <delivery-container *ngFor='let container of containers' [inputContainer]=\\\"container\\\"></delivery-container>\\n</div>\\n\\n\"","import { Component, OnInit} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n//Services\nimport { DeliveryApiService } from '../../services';\n\n//class\nimport { Container } from '../../class';\n\n@Component({\n  selector: 'delivery-truck',\n  templateUrl: './truck.component.html',\n  styleUrls: ['./truck.component.css']\n})\nexport class TruckComponent implements OnInit{\n\n  containers: Container[];\n\n  constructor(\n    private deliveryService: DeliveryApiService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data\n    .subscribe((data: { containers: Container [] }) => {\n    this.containers = data.containers\n    });\n\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//components\nimport { TruckComponent } from './components';\n\n//services\nimport { ContainerResolver } from './services';\n\nconst routes: Routes = [\n  {\n    path: 'delivery',\n    component: TruckComponent,\n    resolve: {\n\t\t\tcontainers: ContainerResolver\n\t\t}\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [ContainerResolver]\n})\nexport class DeliveryRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n\n//Modules\nimport { DeliveryRoutingModule } from './delivery-routing.module';\n\n//Components\nimport { TruckComponent, ContainerComponent, BeerComponent, TimerComponent } from './components';\n\n//services\nimport { DeliveryApiService, InMemoryDataService } from './services';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    DeliveryRoutingModule,\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    )\n  ],\n  declarations: [TruckComponent, ContainerComponent, BeerComponent, TimerComponent],\n  providers: [\n    DeliveryApiService\n  ]\n})\nexport class DeliveryModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { timer, of, Observable, Subject } from 'rxjs';\nimport { switchMap, takeUntil, catchError } from 'rxjs/operators';\n\n//Class\nimport { Container } from '../class';\n\n@Injectable()\nexport class DeliveryApiService {\n\n  //API's url\n  private containersUrl = 'api/containers';\n\n    // Kill subject to stop all requests for component\n    private killTrigger: Subject<void> = new Subject();\n    // Observable to collect information from an api\n    private dataRequest$: Observable<Container[]>;\n    private refreshInterval$: Observable<any>;\n    public containersDatas$: Observable<Container[]>\n\n  constructor(private http: HttpClient) { }\n\n  /** Call the API do get the Containers Datas */\n  getContainers() {\n    return this.http.get<Container[]>(this.containersUrl);\n  }\n\n  /** Init the timer and the request for updating the datas */\n initDataLoader() {\n\n  this.dataRequest$ = this.getContainers();\n\n  this.refreshInterval$ = timer(0, 60000)\n    .pipe(\n      // This kills the request if the user closes the component \n      takeUntil(this.killTrigger),\n      // switchMap cancels the last request, if no response have been received since last tick\n      switchMap(() => this.dataRequest$ )\n    );\n\n  this.containersDatas$ = this.refreshInterval$;\n }\n\n /** Stop the timer for the container update */\n  stopDataLoader()\n  {\n    this.killTrigger.next();\n  }\n}\n","import { Injectable }             from '@angular/core';\nimport { Resolve  } from '@angular/router';\nimport { Observable }             from 'rxjs';\nimport { map }              from 'rxjs/operators';\n\n//Services\nimport { DeliveryApiService }  from './delivery-api.service';\n\n//Class\nimport { Container } from '../class';\n\n@Injectable()\nexport class ContainerResolver implements Resolve<Container[]> {\n  constructor(private service: DeliveryApiService) {}\n\n  resolve(): Observable<Container[]> {\n\n    return this.service.getContainers().pipe(\n      map(containers => {\n        return containers\n      })\n    );\n  }\n}","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n\n    //Mock Datas\n    const containers = [\n        { id: 1,\n          currentTemperature: -5,\n          beer: {\n            id: 1,\n            name: \"Pilsner\",\n            lowTemperature: -6,\n            highTemperature: -4\n          }\n        },\n        { id: 2,\n          currentTemperature: -5,\n          beer: {\n            id: 2,\n            name: \"IPA\",\n            lowTemperature: -6,\n            highTemperature: -5\n          }\n        } ,\n        { id: 3,\n          currentTemperature: -3,\n          beer: {\n            id: 3,\n            name: \"Lager\",\n            lowTemperature: -7,\n            highTemperature: -4\n          }\n        } ,\n        { id: 4,\n          currentTemperature: -7.5,\n          beer: {\n            id: 4,\n            name: \"Stout\",\n            lowTemperature: -8,\n            highTemperature: -6\n          }\n        } ,\n        { id: 5,\n          currentTemperature: -4,\n          beer: {\n            id: 5,\n            name: \"Wheat beer\",\n            lowTemperature: -5,\n            highTemperature: -3\n          }\n        }  ,\n        { id: 6,\n          currentTemperature: -5,\n          beer: {\n            id: 6,\n            name: \"Pale Ale\",\n            lowTemperature: -6,\n            highTemperature: -4\n          }\n        } \n    ];\n    return {containers};\n  }\n}","export * from './delivery-api.service';\nexport * from './in-memory-data.service';\nexport * from './delivery-resolver.service';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}